[{"/home/nikhil/Desktop/Discord_Clone/src/index.js":"1","/home/nikhil/Desktop/Discord_Clone/src/App.js":"2","/home/nikhil/Desktop/Discord_Clone/src/serviceWorker.js":"3","/home/nikhil/Desktop/Discord_Clone/src/app/store.js":"4","/home/nikhil/Desktop/Discord_Clone/src/Sidebar.js":"5","/home/nikhil/Desktop/Discord_Clone/src/SidebarChannel.js":"6","/home/nikhil/Desktop/Discord_Clone/src/Chat.js":"7","/home/nikhil/Desktop/Discord_Clone/src/ChatHeader.js":"8","/home/nikhil/Desktop/Discord_Clone/src/Message.js":"9","/home/nikhil/Desktop/Discord_Clone/src/features/userSlice.js":"10","/home/nikhil/Desktop/Discord_Clone/src/features/appSlice.js":"11","/home/nikhil/Desktop/Discord_Clone/src/Login.js":"12","/home/nikhil/Desktop/Discord_Clone/src/Firebase.js":"13"},{"size":644,"mtime":1611571937871,"results":"14","hashOfConfig":"15"},{"size":1154,"mtime":1611732493048,"results":"16","hashOfConfig":"15"},{"size":5141,"mtime":1611571937871,"results":"17","hashOfConfig":"15"},{"size":264,"mtime":1611676644899,"results":"18","hashOfConfig":"15"},{"size":3625,"mtime":1611740881546,"results":"19","hashOfConfig":"15"},{"size":314,"mtime":1611598941444,"results":"20","hashOfConfig":"15"},{"size":1211,"mtime":1611674738537,"results":"21","hashOfConfig":"15"},{"size":1232,"mtime":1611651683941,"results":"22","hashOfConfig":"15"},{"size":598,"mtime":1611674731774,"results":"23","hashOfConfig":"15"},{"size":456,"mtime":1611679910714,"results":"24","hashOfConfig":"15"},{"size":483,"mtime":1611676511963,"results":"25","hashOfConfig":"15"},{"size":584,"mtime":1611679929597,"results":"26","hashOfConfig":"15"},{"size":608,"mtime":1611675563029,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"1a02w2a",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"/home/nikhil/Desktop/Discord_Clone/src/index.js",[],["56","57"],"/home/nikhil/Desktop/Discord_Clone/src/App.js",[],"/home/nikhil/Desktop/Discord_Clone/src/serviceWorker.js",[],"/home/nikhil/Desktop/Discord_Clone/src/app/store.js",[],"/home/nikhil/Desktop/Discord_Clone/src/Sidebar.js",["58","59"],"import React, { useEffect, useState } from 'react'\nimport \"./Sidebar.css\"\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport AddIcon from '@material-ui/icons/Add';\nimport SidebarChannel from './SidebarChannel';\nimport SignalCellularAltIcon from '@material-ui/icons/SignalCellularAlt';\nimport CallIcon from '@material-ui/icons/Call';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport { Avatar } from '@material-ui/core';\nimport MicIcon from '@material-ui/icons/Mic';\nimport HeadsetMicOutlinedIcon from '@material-ui/icons/HeadsetMicOutlined';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { selectUser } from \"./features/userSlice\"\nimport { useSelector } from 'react-redux';\nimport  db ,{ auth } from './Firebase';\n\nfunction Sidebar() {\n\n    const [channels, setChannels] = useState([])\n\n    useEffect(() => {\n        db.collection(\"channels\").onSnapshot((snapshot)=>\n        {\n            let chan = [...channels];\n            snapshot.docs.map((i)=>{\n                console.log(i.data());\n                chan.push(i.data());\n            })\n            console.log(chan);\n            setChannels(chan)\n        //     setChannels(\n        //         snapshot.docs.map((doc)=>({\n        //             id:doc.id,\n        //             channel:doc.data().channel,\n        //         }))\n        // )\n        }\n        )\n    }, [])\n\n    const handleAddChannel = ()=>{\n        const channelN = prompt(\"Enter Channel Name\");\n        if(channelN)\n        {\n            db.collection(\"channels\").add({\n                channelName:channelN\n            })\n        }\n    }\n\n    const handleClick = ()=>{\n        auth.signOut();\n    }\n\n  const user = useSelector(selectUser);\n\n    return (\n        <div className=\"sidebar\">\n            <div className=\"sidebar__top\">\n                <h3>Discord</h3>\n                <ExpandMoreIcon/>\n            </div>\n\n            <div className=\"sidebar__channels\">\n                <div className=\"sidebar__channelsHeader\">\n                    <div className=\"sidebar__header\">\n                        <ExpandMoreIcon/>\n                        <h4>Channels</h4>\n                    </div>\n                        <AddIcon onClick={handleAddChannel} className=\"sidebar__addChannel\"/>\n                </div>\n                <div className=\"sidebar__channelList\">\n                   {\n                        channels.map((channel)=>{\n                            return <SidebarChannel/>\n                        })\n                   }\n                </div>\n            </div>\n\n            <div className=\"sidebar__voice\">\n                <SignalCellularAltIcon     className=\"sidebar__voiceIcon\"\n                fontSize=\"large\"\n                />\n                <div className=\"sidebar__voiceInfo\">\n                    <h3>Voice Connected</h3>\n                    <p>Stream</p>\n                </div>\n\n                <div className=\"sidebar__voiceIcons\">\n                    <InfoOutlinedIcon/>\n                    <CallIcon/>\n                </div>\n\n            </div>\n\n\n            <div className=\"sidebar__profile\">\n                <Avatar className=\"avatar__photo\" onClick={handleClick} src={user.photo} />\n                <div className=\"sidebar__profileInfo\">\n                    <h3>{user.name}</h3>\n                    <p>#{user.uid.substring(0,5)}</p>\n                </div>\n                <div className=\"sidebar__profileIcons\">\n                    <MicIcon/>\n                    <HeadsetMicOutlinedIcon/>\n                    <SettingsIcon/>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Sidebar\n","/home/nikhil/Desktop/Discord_Clone/src/SidebarChannel.js",[],"/home/nikhil/Desktop/Discord_Clone/src/Chat.js",[],"/home/nikhil/Desktop/Discord_Clone/src/ChatHeader.js",[],"/home/nikhil/Desktop/Discord_Clone/src/Message.js",[],"/home/nikhil/Desktop/Discord_Clone/src/features/userSlice.js",[],"/home/nikhil/Desktop/Discord_Clone/src/features/appSlice.js",[],"/home/nikhil/Desktop/Discord_Clone/src/Login.js",[],"/home/nikhil/Desktop/Discord_Clone/src/Firebase.js",[],{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":25,"column":34,"nodeType":"66","messageId":"67","endLine":25,"endColumn":36},{"ruleId":"68","severity":1,"message":"69","line":39,"column":8,"nodeType":"70","endLine":39,"endColumn":10,"suggestions":"71"},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'channels'. Either include it or remove the dependency array.","ArrayExpression",["74"],"no-global-assign","no-unsafe-negation",{"desc":"75","fix":"76"},"Update the dependencies array to be: [channels]",{"range":"77","text":"78"},[1381,1383],"[channels]"]